simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
centd <- kmeans(d1, centers=2)$centers
centd
centsim <- kmeans(simd, centers=2)$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d1[,1], y = d1[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[1], y=centd[2], size = I(5))
p2 <- p2 %>% add_markers(x =centsim[1], y=centsim[2], size = I(5))
p2
n=66
d1<-matrix(rnorm(n,mean=0,sd=.3), n/2, 3)
d2<-matrix(rnorm(n,mean=3,sd=.5), n/2, 3)
pca<-princomp(d1,d2)
str(pca)
d1<-matrix(rnorm(n,mean=-2,sd=.3), n/2, 3)
d2<-matrix(rnorm(n,mean=3,sd=.5), n/2, 3)
pca<-princomp(d1,d2)
n=66
d1<-matrix(rnorm(n,mean=-2,sd=.3), n/2, 3)
d1<-matrix(rnorm(n,mean=-2,sd=.3), n/2, 2)
d2<-matrix(rnorm(n,mean=3,sd=.5), n/2, 2)
pca<-princomp(d1,d2)
d1
d2
n=66
d1<-matrix(rnorm(n,mean=-2,sd=.3), n/2, 2)
d2<-matrix(rnorm(n,mean=3,sd=.5), n/2, 2)
d<-rbind(d1,d2)
pca<-princomp(d)
mx<-min(pca$scores[,1]) # menor valor de x no espaço transformado
Mx<-max(pca$scores[,1]) # maior valor de x no espaço transformado
my<-min(pca$scores[,2]) # menor valor de y no espaço transformado
My<-max(pca$scores[,2]) # maior valor de y no espaço transformado
simx<-runif(33,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
centd <- kmeans(d1, centers=2)$centers
centd
centsim <- kmeans(simd, centers=2)$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d1[,1], y = d1[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[1], y=centd[2], size = I(5))
p2 <- p2 %>% add_markers(x =centsim[1], y=centsim[2], size = I(5))
p2
n=66
d1<-matrix(rnorm(n,mean=-4,sd=.3), n/2, 2)
d2<-matrix(rnorm(n,mean=4,sd=.5), n/2, 2)
d<-rbind(d1,d2)
pca<-princomp(d)
str(pca)
mx<-min(pca$scores[,1]) # menor valor de x no espaço transformado
Mx<-max(pca$scores[,1]) # maior valor de x no espaço transformado
my<-min(pca$scores[,2]) # menor valor de y no espaço transformado
My<-max(pca$scores[,2]) # maior valor de y no espaço transformado
simx<-runif(33,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
centd <- kmeans(d1, centers=2)$centers
centd <- kmeans(d, centers=2)$centers
centsim <- kmeans(simd, centers=2)$centers
centsim
centd
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2
n=66
d1<-matrix(rnorm(n,mean=-2,sd=.3), n/2, 2)
d2<-matrix(rnorm(n,mean=1,sd=.5), n/2, 2)
d<-rbind(d1,d2)
pca<-princomp(d)
str(pca)
mx<-min(pca$scores[,1]) # menor valor de x no espaço transformado
Mx<-max(pca$scores[,1]) # maior valor de x no espaço transformado
my<-min(pca$scores[,2]) # menor valor de y no espaço transformado
My<-max(pca$scores[,2]) # maior valor de y no espaço transformado
simx<-runif(33,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
centd <- kmeans(d, centers=2)$centers
centd
centsim <- kmeans(simd, centers=2)$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2
simx<-runif(33*2,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33*2,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
centd <- kmeans(d, centers=2)$centers
centd
centsim <- kmeans(simd, centers=2)$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2
p2 <- p2 %>% add_markers(x =centd[1], y=centd[2], size = I(5))
p2 <- p2 %>% add_markers(x =centsim[1], y=centsim[2], size = I(5))
p2
centd <- kmeans(d, centers=2)$centers
centd
centd[1]
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[2,1], size = I(5))
p2
centd[2,1]
centd[1,1]
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(5))
p2
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2
centd
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2
simx<-runif(33*5,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33*5,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
centd <- kmeans(d, centers=2)$centers
centd
centsim <- kmeans(simd, centers=2)$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2
p2 <- p2 %>% add_markers(x =centsim[2,2], y=centsim[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d[,1],
y = centd[2,1], yend = d[,2],)
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d[,1],
y = centd[2,1], yend = d[,2],
alpha = 0.3, size = I(2))
p2
dc <- d
outd<- kmeans(d, centers=2)
centd <- outd$centers
dc$cluster<-outd$cluster
dc
outd
outd$cluster
dc$cluste
dc$cluster
dc
d
dc <- d
dc<-rbind(dc, outd$cluster)
dc <- d1
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d1[,1],
y = centd[2,1], yend = d1[,2],
alpha = 0.3, size = I(2))
p2
p2 <- p2 %>% add_segments(x = centd[1,1], xend = d2[,1],
y = centd[1,2], yend = d2[,2],
alpha = 0.3, size = I(2))
p2
outsim <- kmeans(simd, centers=2)
centsim <- outsim$centers
centsim
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d1[,1],
y = centd[2,1], yend = d1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centd[1,1], xend = d2[,1],
y = centd[1,2], yend = d2[,2],
alpha = 0.3, size = I(2))
p2
outsim
simd
simdc <- cbind(simdc, outsim$cluster)
simdc <- cbind(simd, outsim$cluster)
simdc
simd[simdc[,3] == 1]
str(simdc)
simdc <- as.data.frame(cbind(simd, outsim$cluster))
simdc
str(simdc)
simd[simdc[,3] == 1]
simd[simdc[,3] == 1,]
simdc <- cbind(simd, outsim$cluster)
str(simdc)
simd[simdc[,3] == 1,]
simdc1 <- simd[simdc[,3] == 1,]
simdc2 <- simd[simdc[,3] == 2,]
simdc2
p2 <- p2 %>% add_segments(x = centsim[2,1], xend = simdc1[,1],
y = centsim[2,2], yend = simdc1[,2],
alpha = 0.3, size = I(2))
p2
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d1[,1],
y = centd[2,1], yend = d1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centd[1,1], xend = d2[,1],
y = centd[1,2], yend = d2[,2],
alpha = 0.3, size = I(2))
simdc <- cbind(simd, outsim$cluster)
str(simdc)
simdc1 <- simd[simdc[,3] == 1,]
simdc2 <- simd[simdc[,3] == 2,]
p2 <- p2 %>% add_segments(x = centsim[1,1], xend = simdc1[,1],
y = centsim[1,2], yend = simdc1[,2],
alpha = 0.3, size = I(2))
p2
p2 <- p2 %>% add_segments(x = centsim[2,1], xend = simdc2[,1],
y = centsim[2,2], yend = simdc2[,2],
alpha = 0.3, size = I(2))
p2
n=66
d1<-matrix(rnorm(n,mean=-2,sd=.4), n/2, 2)
d2<-matrix(rnorm(n,mean=0.5,sd=.5), n/2, 2)
d<-rbind(d1,d2)
pca<-princomp(d)
str(pca)
mx<-min(pca$scores[,1]) # menor valor de x no espaço transformado
Mx<-max(pca$scores[,1]) # maior valor de x no espaço transformado
my<-min(pca$scores[,2]) # menor valor de y no espaço transformado
My<-max(pca$scores[,2]) # maior valor de y no espaço transformado
simx<-runif(33*5,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33*5,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
outd<- kmeans(d, centers=2)
centd <- outd$centers
centd
outsim <- kmeans(simd, centers=2)
centsim <- outsim$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d1[,1],
y = centd[2,1], yend = d1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centd[1,1], xend = d2[,1],
y = centd[1,2], yend = d2[,2],
alpha = 0.3, size = I(2))
simdc <- cbind(simd, outsim$cluster)
str(simdc)
simdc1 <- simd[simdc[,3] == 1,]
simdc2 <- simd[simdc[,3] == 2,]
p2 <- p2 %>% add_segments(x = centsim[1,1], xend = simdc1[,1],
y = centsim[1,2], yend = simdc1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centsim[2,1], xend = simdc2[,1],
y = centsim[2,2], yend = simdc2[,2],
alpha = 0.3, size = I(2))
p2
n=66
d1<-matrix(rnorm(n,mean=-2,sd=.3), n/2, 2)
d2<-matrix(rnorm(n,mean=1,sd=.5), n/2, 2)
d<-rbind(d1,d2)
pca<-princomp(d)
str(pca)
mx<-min(pca$scores[,1]) # menor valor de x no espaço transformado
Mx<-max(pca$scores[,1]) # maior valor de x no espaço transformado
my<-min(pca$scores[,2]) # menor valor de y no espaço transformado
My<-max(pca$scores[,2]) # maior valor de y no espaço transformado
simx<-runif(33*5,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33*5,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
outd<- kmeans(d, centers=2)
centd <- outd$centers
centd
outsim <- kmeans(simd, centers=2)
centsim <- outsim$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d1[,1],
y = centd[2,1], yend = d1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centd[1,1], xend = d2[,1],
y = centd[1,2], yend = d2[,2],
alpha = 0.3, size = I(2))
simdc <- cbind(simd, outsim$cluster)
str(simdc)
simdc1 <- simd[simdc[,3] == 1,]
simdc2 <- simd[simdc[,3] == 2,]
p2 <- p2 %>% add_segments(x = centsim[1,1], xend = simdc1[,1],
y = centsim[1,2], yend = simdc1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centsim[2,1], xend = simdc2[,1],
y = centsim[2,2], yend = simdc2[,2],
alpha = 0.3, size = I(2))
p2
n=66
d1<-matrix(rnorm(n,mean=-2,sd=.3), n/2, 2)
d2<-matrix(rnorm(n,mean=1,sd=.4), n/2, 2)
d<-rbind(d1,d2)
pca<-princomp(d)
str(pca)
mx<-min(pca$scores[,1]) # menor valor de x no espaço transformado
Mx<-max(pca$scores[,1]) # maior valor de x no espaço transformado
my<-min(pca$scores[,2]) # menor valor de y no espaço transformado
My<-max(pca$scores[,2]) # maior valor de y no espaço transformado
simx<-runif(33*5,mx,Mx) # uniforme entre mx e Mx
simy<-runif(33*5,my,My) # uniforme entre my e My
simd<-t(rbind(simx,simy))
simd<-simd %*% t(pca$loadings) + pca$center # transformando para o espaço original
outd<- kmeans(d, centers=2)
centd <- outd$centers
centd
outsim <- kmeans(simd, centers=2)
centsim <- outsim$centers
centsim
help(kmeans)
library(plotly)
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d1[,1],
y = centd[2,1], yend = d1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centd[1,1], xend = d2[,1],
y = centd[1,2], yend = d2[,2],
alpha = 0.3, size = I(2))
simdc <- cbind(simd, outsim$cluster)
str(simdc)
simdc1 <- simd[simdc[,3] == 1,]
simdc2 <- simd[simdc[,3] == 2,]
p2 <- p2 %>% add_segments(x = centsim[1,1], xend = simdc1[,1],
y = centsim[1,2], yend = simdc1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centsim[2,1], xend = simdc2[,1],
y = centsim[2,2], yend = simdc2[,2],
alpha = 0.3, size = I(2))
p2
p2 <- plot_ly(as.data.frame(d)) %>%
add_trace(x = d[,1], y = d[,2], size = I(4))
p2 <- p2 %>% add_trace(x = simd[,1], y = simd[,2], size = I(4))
p2 <- p2 %>% add_markers(x =centd[2,2], y=centd[2,1], size = I(8))
p2 <- p2 %>% add_markers(x =centd[1,1], y=centd[1,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[2,1], y=centsim[2,2], size = I(8))
p2 <- p2 %>% add_markers(x =centsim[1,1], y=centsim[1,2], size = I(8))
p2 <- p2 %>% add_segments(x = centd[1,1], xend = d1[,1],
y = centd[1,2], yend = d1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centd[2,2], xend = d2[,1],
y = centd[2,1], yend = d2[,2],
alpha = 0.3, size = I(2))
simdc <- cbind(simd, outsim$cluster)
str(simdc)
simdc1 <- simd[simdc[,3] == 1,]
simdc2 <- simd[simdc[,3] == 2,]
p2 <- p2 %>% add_segments(x = centsim[1,1], xend = simdc1[,1],
y = centsim[1,2], yend = simdc1[,2],
alpha = 0.3, size = I(2))
p2 <- p2 %>% add_segments(x = centsim[2,1], xend = simdc2[,1],
y = centsim[2,2], yend = simdc2[,2],
alpha = 0.3, size = I(2))
p2
saveWidget(as_widget(p2), file = "withinss_cube_plot.html")
dens <- rnorm(1000, 0,1)
dens
library(slidify)
library(slidifyLibraries)
library(tcltk)
dir_wd.loc<-tk_choose.dir()
setwd(dir_wd.loc)
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
slidify("index.Rmd")
# +
runDeck()
